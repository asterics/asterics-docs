(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{372:function(e,t,r){"use strict";r.r(t);var i=r(0),s=Object(i.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[r("p",[e._v("IIRFilter")]),e._v(" "),e._m(0),e._v(" "),r("p",[e._v("Component Type: Processor (Subcategory: DSP and Feature Detection)")]),e._v(" "),r("p",[e._v("This plugin provides adjustable Infinite Impulse Response Filters, based on the Java DSP Library: "),r("a",{attrs:{href:"http://www.source-code.biz/dsp/java/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.source-code.biz/dsp/java"),r("OutboundLink")],1)]),e._v(" "),e._m(1),e._v(" "),r("p",[e._v("IIRFilter plugin")]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"iirfilter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#iirfilter","aria-hidden":"true"}},[this._v("#")]),this._v(" IIRFilter")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"img/IIRFilter.jpg",alt:"Screenshot: IIRFilter plugin",title:"Screenshot: IIRFilter plugin"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"input-port-description"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description","aria-hidden":"true"}},[this._v("#")]),this._v(" Input Port Description")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("strong",[this._v("in [double]:")]),this._v(" The signal to be filtered")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"input-port-description-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description-2","aria-hidden":"true"}},[this._v("#")]),this._v(" Input Port Description")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("strong",[this._v("out [double]:")]),this._v(" The filtered signal")]),this._v(" "),t("li",[t("strong",[this._v("magnitude [double]:")]),this._v(" the magnitude of the filtered signal in the selected passband (only calculated if the passType = bandpass !)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[this._v("#")]),this._v(" Properties")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("p",[r("strong",[e._v("passType [integer] (combobox selection):")]),e._v(" can be lowpass, highpass, bandpass or bandstop")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("characteristicType [integer] (combobox selection):")]),e._v(" can be butterworth, bessel or chebyshev")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("order [integer]:")]),e._v(" the filter order (values from 1 to 12 recommended)")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("samplingFrequency [integer]:")]),e._v(" the sampling rate of the input signal")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("fc1 [double]:")]),e._v(" corner frequency (lower corner frequency for bandpass filter)")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("fc2 [double]:")]),e._v(" higher corner frequency (ignored in case of highpass or lowpass types)")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("ripple [double]:")]),e._v(" the passband ripple supression, must be a negative value (only for chebyshev types, ignored for other types)")])])])}],!1,null,null,null);s.options.__file="IIRFilter.md";t.default=s.exports}}]);