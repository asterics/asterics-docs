(window.webpackJsonp=window.webpackJsonp||[]).push([[172],{312:function(t,e,r){"use strict";r.r(e);var n=r(0),i=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[r("p",[t._v("StringAppend")]),t._v(" "),r("h1",{attrs:{id:"string-append"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#string-append","aria-hidden":"true"}},[t._v("#")]),t._v(" String Append")]),t._v(" "),r("p",[t._v("Component Type: Processor (Subcategory: Event and String Processing)")]),t._v(" "),r("p",[t._v("Appends an incoming string or ASCII character to a stringbuffer, the updated stringbuffer is sent to an output port. Incoming events are available to send the final string to a dedicated output port and to clear the stringbuffer (or set it to a default value respectively).")]),t._v(" "),r("p",[r("img",{attrs:{src:"img/StringAppend.jpg",alt:"Screenshot: StringAppend plugin",title:"Screenshot: StringAppend plugin"}})]),t._v(" "),r("p",[t._v("StringAppend plugin")]),t._v(" "),r("h2",{attrs:{id:"input-port-description"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description","aria-hidden":"true"}},[t._v("#")]),t._v(" Input Port Description")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("inStr [string]:")]),t._v(" String input port.")]),t._v(" "),r("li",[r("strong",[t._v("inChar [integer]:")]),t._v(" ASCII code input port.")])]),t._v(" "),r("h2",{attrs:{id:"output-port-description"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#output-port-description","aria-hidden":"true"}},[t._v("#")]),t._v(" Output Port Description")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("actResult [string]:")]),t._v(" String output port for current stringbuffer content.")]),t._v(" "),r("li",[r("strong",[t._v("finalResult [string]:")]),t._v(" String output port for final stringbuffer content (triggered by event or enter).")])]),t._v(" "),r("h2",{attrs:{id:"event-listener-ports"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-ports","aria-hidden":"true"}},[t._v("#")]),t._v(" Event Listener Ports")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("sendNow:")]),t._v(' sends the current content of the stringbuffer to the "finalResult" output port.')]),t._v(" "),r("li",[r("strong",[t._v("sendNowAndClear:")]),t._v(' sends the current content of the stringbuffer to the "finalResult" output port and sets the stringbuffer to the default value.')]),t._v(" "),r("li",[r("strong",[t._v("deleteCharacter:")]),t._v(" deletes the last character of the stringbuffer.")]),t._v(" "),r("li",[r("strong",[t._v("clear:")]),t._v(" sets the stringbuffer to the default value.")])]),t._v(" "),r("h2",{attrs:{id:"properties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),r("ul",[r("li",[r("p",[r("strong",[t._v("autoSendAtEnter [boolean]:")]),t._v(" If true, the stringbuffer is sent and cleared when the ASCII value for Enter/Return is received by the inChar input port.")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("defaultValue [string]:")]),t._v(" An optional string text which is used a initial value for the stringbuffer.")])])])])}],!1,null,null,null);i.options.__file="StringAppend.md";e.default=i.exports}}]);