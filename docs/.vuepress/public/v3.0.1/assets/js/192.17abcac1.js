(window.webpackJsonp=window.webpackJsonp||[]).push([[192],{272:function(t,e,o){"use strict";o.r(e);var n=o(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"content"},[o("p",[t._v("ButtonGrid")]),t._v(" "),o("h1",{attrs:{id:"button-grid"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#button-grid","aria-hidden":"true"}},[t._v("#")]),t._v(" Button Grid")]),t._v(" "),o("p",[t._v("Component Type: Sensor (Subcategory: Graphical User Interface)")]),t._v(" "),o("p",[t._v("The Button Grid component is a simple GUI on-screen keyboard. It sends events after buttons have been pressed.")]),t._v(" "),o("p",[o("img",{attrs:{src:"img/ButtonGrid.jpg",alt:"Screenshot: ButtonGrid plugin",title:"Screenshot: ButtonGrid plugin"}})]),t._v(" "),o("p",[t._v("ButtonGrid plugin")]),t._v(" "),o("h2",{attrs:{id:"event-trigger-description"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#event-trigger-description","aria-hidden":"true"}},[t._v("#")]),t._v(" Event Trigger Description")]),t._v(" "),o("ul",[o("li",[o("strong",[t._v("button1...button20:")]),t._v(" These events are fired as the corresponding buttons are pressed.")])]),t._v(" "),o("h2",{attrs:{id:"properties"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),o("ul",[o("li",[o("strong",[t._v("caption [string]:")]),t._v(" The text shown on the component caption.")]),t._v(" "),o("li",[o("strong",[t._v("horizontalOrientation [boolean]:")]),t._v(" If selected, the keyboard will be placed horizontally, otherwise the keyboard will be placed vertically.")]),t._v(" "),o("li",[o("strong",[t._v("textColor [integer, combobox selection]:")]),t._v(' The color of the caption text ("default" keeps the standard setting)')]),t._v(" "),o("li",[o("strong",[t._v("backgroundColor [integer, combobox selection]:")]),t._v(' The color of the button background ("default" keeps the standard setting)')]),t._v(" "),o("li",[o("strong",[t._v("borderColor [integer, combobox selection]:")]),t._v(' The color of the button frame ("default" keeps the standard setting)')]),t._v(" "),o("li",[o("strong",[t._v("borderThickness [integer]:")]),t._v(" The size of the button frame")]),t._v(" "),o("li",[o("strong",[t._v("selectionFrameColor [integer, combobox selection]:")]),t._v(' The color of the selection frame (active button, "default" keeps the standard setting)')]),t._v(" "),o("li",[o("strong",[t._v("selectionFrameThickness [integer]:")]),t._v(" The size of the selection frame")]),t._v(" "),o("li",[o("strong",[t._v("displayGUI [boolean]:")]),t._v(" if selected, the GUI of this component will be displayed - if not, the GUI will be hidden and disabled.")]),t._v(" "),o("li",[o("strong",[t._v("buttonCaption1...buttonCaption20 [string]:")]),t._v(" The text shown on the buttons:1...20. If the text is empty, the button will not be displayed at all.")]),t._v(" "),o("li",[o("strong",[t._v("toolTip1...toolTip20 [string]:")]),t._v(" The text shown as tooltip when the mouse hovers over a corresponding button. If the text is empty, no tooltip will be displayed.")])])])}],!1,null,null,null);r.options.__file="ButtonGrid.md";e.default=r.exports}}]);