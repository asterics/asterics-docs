(window.webpackJsonp=window.webpackJsonp||[]).push([[236],{234:function(e,t,n){"use strict";n.r(t);var i=n(0),a=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[n("p",[e._v("SignalShaper")]),e._v(" "),n("h1",{attrs:{id:"signal-shaper"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#signal-shaper","aria-hidden":"true"}},[e._v("#")]),e._v(" Signal Shaper")]),e._v(" "),n("p",[e._v("Component Type: Sensor (Subcategory: Simulation)")]),e._v(" "),n("p",[e._v("The SignalShaper component can be used to generate signal composed from basic linear functions.")]),e._v(" "),n("p",[n("img",{attrs:{src:"img/SignalShaper.jpg",alt:"Screenshot: SignalShaper plugin",title:"Screenshot: SignalShaper plugin"}})]),e._v(" "),n("p",[e._v("SignalShaper plugin")]),e._v(" "),n("p",[n("img",{attrs:{src:"img/SignalShaper.png",alt:"Example composed signal created from three linear signals",title:"Example composed signal"}})]),e._v(" "),n("p",[e._v("Example composed signal created from three linear signals")]),e._v(" "),n("h2",{attrs:{id:"output-port-description"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#output-port-description","aria-hidden":"true"}},[e._v("#")]),e._v(" Output Port Description")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("output [double]:")]),e._v(" The output port for the signal.")])]),e._v(" "),n("h2",{attrs:{id:"event-listener-description"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-description","aria-hidden":"true"}},[e._v("#")]),e._v(" Event Listener Description")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("start:")]),e._v(" Start the signal generation. If this event is received during signal generation, the signal generation is restarted.")])]),e._v(" "),n("h2",{attrs:{id:"properties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),n("ul",[n("li",[n("p",[n("strong",[e._v("interval [integer]:")]),e._v(" The samplingÂ  rate in milliseconds.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("numberOfLines [integer]:")]),e._v(" The number of linear signals used to shape the output signal.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("behaviourAfterFinish ["),n("strong",[n("strong",[e._v("integer")])]),e._v("]:")]),e._v(" Defines the component behaviour after all signal lines have been sent:")]),e._v(" "),n("ul",[n("li",[n("p",[n("strong",[e._v("do nothing:")]),e._v(" stop any action.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("repeat:")]),e._v(" Send the signal lines from beginning.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("send the last value:")]),e._v(" Continue to send the last value of the signal.")])])])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("beginValue1...beginValue5 [double]:")]),e._v(" The begin value of the linear signals.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("endValue1...endValue5 [double]:")]),e._v(" The end value of the linear signals.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("time1...time5 [integer]:")]),e._v(" The duration of the linear signals in milliseconds.")])])])])}],!1,null,null,null);a.options.__file="SignalShaper.md";t.default=a.exports}}]);