(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{351:function(e,t,o){"use strict";o.r(t);var i=o(0),a=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"content"},[o("p",[e._v("Dot Meter")]),e._v(" "),o("h1",{attrs:{id:"dot-meter"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dot-meter","aria-hidden":"true"}},[e._v("#")]),e._v(" Dot Meter")]),e._v(" "),o("p",[e._v("Component Type: Actuator (Subcategory: Graphical User Interface)")]),e._v(" "),o("p",[e._v("The Dot Meter generates a graphical representation of a 2-dimensional signal (for example x/y-coordinates) using a colored dot.")]),e._v(" "),o("p",[o("img",{attrs:{src:"img/DotMeter.jpg",alt:"Screenshot: DotMeter plugin",title:"Screenshot: DotMeter plugin"}})]),e._v(" "),o("p",[e._v("DotMeter plugin")]),e._v(" "),o("p",[o("img",{attrs:{src:"img/DotMeter_example.jpg",alt:"Screenshot: DotMeter example",title:"Screenshot: DotMeter example"}})]),e._v(" "),o("p",[e._v("DotMeter example")]),e._v(" "),o("h2",{attrs:{id:"requirements"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#requirements","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),o("p",[e._v("Computer Monitor or LC-Display available for graphics output.")]),e._v(" "),o("h2",{attrs:{id:"input-port-description"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description","aria-hidden":"true"}},[e._v("#")]),e._v(" Input Port Description")]),e._v(" "),o("ul",[o("li",[o("strong",[e._v("x [double]:")]),e._v(" The x-input port for the signal to be displayed. "),o("strong",[e._v("This input port supports synchronization")])]),e._v(" "),o("li",[o("strong",[e._v("y [double]:")]),e._v(" The y-input port for the signal to be displayed. "),o("strong",[e._v("This input port supports synchronization")])])]),e._v(" "),o("h2",{attrs:{id:"event-listener-description"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-description","aria-hidden":"true"}},[e._v("#")]),e._v(" Event Listener Description:")]),e._v(" "),o("ul",[o("li",[o("strong",[e._v("dotOn:")]),e._v(" fill the dot with color.")]),e._v(" "),o("li",[o("strong",[e._v("dotOff:")]),e._v(" show only outline of the dot (can be used to create a led indicator).")])]),e._v(" "),o("h2",{attrs:{id:"properties"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),o("ul",[o("li",[o("strong",[e._v("xMin [double]:")]),e._v(" The default x-minimum of the signal range at model start (this value is automatically updated as lower values come in).")]),e._v(" "),o("li",[o("strong",[e._v("xMax [double]:")]),e._v(" The default x-maximum of the signal range at model start (this value is automatically updated as higher values come in).")]),e._v(" "),o("li",[o("strong",[e._v("yMin [double]:")]),e._v(" The default y-minimum of the signal range at model start (this value is automatically updated as lower values come in).")]),e._v(" "),o("li",[o("strong",[e._v("yMax [double]:")]),e._v(" The default y-maximum of the signal range at model start (this value is automatically updated as higher values come in).")]),e._v(" "),o("li",[o("strong",[e._v("mode [integer]:")]),e._v(' Via this property the way how values which exceed the current min/max range of the bar graph component are handled: "clip to min and max" crops incoming values to the min/max range, "autoupdate min and max" scales the bar graph window and updates the min/max values to cover the incoming value.')]),e._v(" "),o("li",[o("strong",[e._v("dotSize [integer]:")]),e._v(" The radius of the dot.")]),e._v(" "),o("li",[o("strong",[e._v("centerLine [boolean]:")]),e._v(" defines if a line to the window center is shown or not.")]),e._v(" "),o("li",[o("strong",[e._v("displayDot [boolean]:")]),e._v(" defines if the dot is filled or not.")]),e._v(" "),o("li",[o("strong",[e._v("displayCaptions [boolean]:")]),e._v(" defines if the value / captions are shown or not.")]),e._v(" "),o("li",[o("strong",[e._v("gridColor [integer]:")]),e._v(" The colour of the graph grid and descriptions.")]),e._v(" "),o("li",[o("strong",[e._v("dotColor [integer]:")]),e._v(" The colour of the dot.")]),e._v(" "),o("li",[o("strong",[e._v("backgroundColour [integer]:")]),e._v(" The colour of the window background.")]),e._v(" "),o("li",[o("strong",[e._v("fontSize [integer]:")]),e._v(" The font size of the display's caption.")]),e._v(" "),o("li",[o("strong",[e._v("caption [string]:")]),e._v(" The text of the display's caption.")]),e._v(" "),o("li",[o("strong",[e._v("displayGUI [boolean]:")]),e._v(" if selected, the GUI of this component will be displayed - if not, the GUI will be hidden and disabled.")])])])}],!1,null,null,null);a.options.__file="DotMeter.md";t.default=a.exports}}]);