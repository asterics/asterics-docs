(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{384:function(e,t,a){"use strict";a.r(t);var r=a(0),o=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("p",[e._v("Dot Meter")]),e._v(" "),a("h1",{attrs:{id:"dot-meter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dot-meter","aria-hidden":"true"}},[e._v("#")]),e._v(" Dot Meter")]),e._v(" "),a("h3",{attrs:{id:"component-type-actuator-subcategory-graphical-user-interface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#component-type-actuator-subcategory-graphical-user-interface","aria-hidden":"true"}},[e._v("#")]),e._v(" Component Type: Actuator (Subcategory: Graphical User Interface)")]),e._v(" "),a("p",[e._v("The Dot Meter generates a graphical representation of a 2-dimensional signal (for example x/y-coordinates) using a colored dot.")]),e._v(" "),a("p",[a("img",{attrs:{src:"img/DotMeter.jpg",alt:"Screenshot: DotMeter plugin",title:"Screenshot: DotMeter plugin"}}),a("br"),e._v("\nDotMeter plugin")]),e._v(" "),a("p",[a("img",{attrs:{src:"img/DotMeter_example.jpg",alt:"Screenshot: DotMeter example",title:"Screenshot: DotMeter example"}}),a("br"),e._v("\nDotMeter example")]),e._v(" "),a("h2",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("p",[e._v("Computer Monitor or LC-Display available for graphics output.")]),e._v(" "),a("h2",{attrs:{id:"input-port-description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description","aria-hidden":"true"}},[e._v("#")]),e._v(" Input Port Description")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("x [double]:")]),e._v(" The x-input port for the signal to be displayed. "),a("strong",[e._v("This input port supports synchronization")])]),e._v(" "),a("li",[a("strong",[e._v("y [double]:")]),e._v(" The y-input port for the signal to be displayed. "),a("strong",[e._v("This input port supports synchronization")])])]),e._v(" "),a("h2",{attrs:{id:"event-listener-description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-description","aria-hidden":"true"}},[e._v("#")]),e._v(" Event Listener Description:")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("dotOn:")]),e._v(" fill the dot with color.")]),e._v(" "),a("li",[a("strong",[e._v("dotOff:")]),e._v(" show only outline of the dot (can be used to create a led indicator).")])]),e._v(" "),a("h2",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("xMin [double]:")]),e._v(" The default x-minimum of the signal range at model start (this value is automatically updated as lower values come in).")]),e._v(" "),a("li",[a("strong",[e._v("xMax [double]:")]),e._v(" The default x-maximum of the signal range at model start (this value is automatically updated as higher values come in).")]),e._v(" "),a("li",[a("strong",[e._v("yMin [double]:")]),e._v(" The default y-minimum of the signal range at model start (this value is automatically updated as lower values come in).")]),e._v(" "),a("li",[a("strong",[e._v("yMax [double]:")]),e._v(" The default y-maximum of the signal range at model start (this value is automatically updated as higher values come in).")]),e._v(" "),a("li",[a("strong",[e._v("mode [integer]:")]),e._v(' Via this property the way how values which exceed the current min/max range of the bar graph component are handled: "clip to min and max" crops incoming values to the min/max range, "autoupdate min and max" scales the bar graph window and updates the min/max values to cover the incoming value.')]),e._v(" "),a("li",[a("strong",[e._v("dotSize [integer]:")]),e._v(" The radius of the dot.")]),e._v(" "),a("li",[a("strong",[e._v("centerLine [boolean]:")]),e._v(" defines if a line to the window center is shown or not.")]),e._v(" "),a("li",[a("strong",[e._v("displayDot [boolean]:")]),e._v(" defines if the dot is filled or not.")]),e._v(" "),a("li",[a("strong",[e._v("displayCaptions [boolean]:")]),e._v(" defines if the value / captions are shown or not.")]),e._v(" "),a("li",[a("strong",[e._v("gridColor [integer]:")]),e._v(" The colour of the graph grid and descriptions.")]),e._v(" "),a("li",[a("strong",[e._v("dotColor [integer]:")]),e._v(" The colour of the dot.")]),e._v(" "),a("li",[a("strong",[e._v("backgroundColour [integer]:")]),e._v(" The colour of the window background.")]),e._v(" "),a("li",[a("strong",[e._v("fontSize [integer]:")]),e._v(" The font size of the display's caption.")]),e._v(" "),a("li",[a("strong",[e._v("caption [string]:")]),e._v(" The text of the display's caption.")])])])}],!1,null,null,null);o.options.__file="DotMeter.md";t.default=o.exports}}]);