(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{294:function(e,t,n){"use strict";n.r(t);var i=n(0),r=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[n("p",[e._v("EventCounter")]),e._v(" "),n("h1",{attrs:{id:"event-counter"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-counter","aria-hidden":"true"}},[e._v("#")]),e._v(" Event Counter")]),e._v(" "),n("h3",{attrs:{id:"component-type-processor-subcategory-event-and-string-processing"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#component-type-processor-subcategory-event-and-string-processing","aria-hidden":"true"}},[e._v("#")]),e._v(" Component Type: Processor (Subcategory: Event and String Processing)")]),e._v(" "),n("p",[e._v("This component counts events. It can add and subtract incoming events.")]),e._v(" "),n("p",[n("img",{attrs:{src:"img/EventCounter.jpg",alt:"Screenshot:EventCounter plugin",title:"Screenshot: EventCounter plugin"}}),n("br"),e._v("\nEventCounter plugin")]),e._v(" "),n("h2",{attrs:{id:"output-port-description"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#output-port-description","aria-hidden":"true"}},[e._v("#")]),e._v(" Output Port Description")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("output [integer]:")]),e._v(" Sends the number of events.")])]),e._v(" "),n("h2",{attrs:{id:"event-listener-description"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-description","aria-hidden":"true"}},[e._v("#")]),e._v(" Event Listener Description")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("increase:")]),e._v(" Increases the number of events.")]),e._v(" "),n("li",[n("strong",[e._v("decrease:")]),e._v(" Decreases the number of events.")]),e._v(" "),n("li",[n("strong",[e._v("resetToZero:")]),e._v(" Sets the event number to zero.")]),e._v(" "),n("li",[n("strong",[e._v("resetToInitial:")]),e._v(" Sets the event number to the initial value.")])]),e._v(" "),n("h2",{attrs:{id:"properties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),n("ul",[n("li",[n("p",[n("strong",[e._v("mode [integer]:")]),e._v(" Defines counting mode:")])]),e._v(" "),n("li",[n("p",[n("em",[e._v("no limit:")]),e._v(" The component counts events without any limitation.")])]),e._v(" "),n("li",[n("p",[n("em",[e._v("limit maximum:")]),e._v(" In this mode, the maximum value of the counter is limited by the maxValue property.")])]),e._v(" "),n("li",[n("p",[n("em",[e._v("limit minimum:")]),e._v(" In this mode, the minimum value of the counter is limited by the minValue property.")])]),e._v(" "),n("li",[n("p",[n("em",[e._v("limit minimum and maximum:")]),e._v(" In this mode, both maximum and minimum values of the counter are limited by the maxValue amd minValue properties.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("minValue [integer]:")]),e._v(" Defines the minimum value of the counter.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("maxValue [integer]:")]),e._v(" Defines the maximum value of the counter.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("initialValue [integer]:")]),e._v(" Defines the initial value of the counter.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("wrapAround [boolean]:")]),e._v(" if selected and the appropriate mode is set, exceeding the maximum value will wrap to the minimum value and vice versa.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("initialValue [boolean]:")]),e._v(" if selected, the initial value is sent at the startup.")])])])])}],!1,null,null,null);r.options.__file="EventCounter.md";t.default=r.exports}}]);