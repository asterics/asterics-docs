(window.webpackJsonp=window.webpackJsonp||[]).push([[232],{1240:function(t,e,r){"use strict";r.r(e);var i=r(2),s=Object(i.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"comport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#comport"}},[t._v("#")]),t._v(" ComPort")]),t._v(" "),e("p",[t._v("Component Type: Processor (Subcategory: Communication)")]),t._v(" "),e("p",[t._v("The ComPort plugin can be used to send and receive data from serial devices (e.g. microcontrollers/embedded devices/wireless links etc.) via a COM port or virtual COM port. The plugin provides support for different data formats of serial communication, e.g. string or binary")]),t._v(" "),e("p",[e("img",{attrs:{src:r(825),alt:"Screenshot: COMPort plugin",title:"Screenshot: COMPort plugin"}})]),t._v(" "),e("p",[t._v("COMPort plugin")]),t._v(" "),e("h2",{attrs:{id:"input-port-description"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description"}},[t._v("#")]),t._v(" Input Port Description")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("send [string]:")]),t._v(" string which will be sent to the microcontroller / embedded module")])]),t._v(" "),e("h2",{attrs:{id:"output-port-description"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output-port-description"}},[t._v("#")]),t._v(" Output Port Description")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("received [string]:")]),t._v(" string which has been received (was sent from the microcontroller / embedded module)")])]),t._v(" "),e("h2",{attrs:{id:"event-listener-description"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-description"}},[t._v("#")]),t._v(" Event Listener Description")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("enablePlugin:")]),t._v(" Enables the functionality of this plugin.")]),t._v(" "),e("li",[e("strong",[t._v("disablePlugin:")]),t._v(" Disables the functionality of this plugin. Any open COM port is closed and no new values are received.")])]),t._v(" "),e("h2",{attrs:{id:"properties"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("enabled [boolean]:")]),t._v(" If true (default), the plugin is enabled, if false the plugin does nothing and doesnâ€™t attempt to open the given COM port.")]),t._v(" "),e("li",[e("strong",[t._v("ComPort [string]:")]),t._v(" Defines the COM Port of the target serial device. e.g. COM0")]),t._v(" "),e("li",[e("strong",[t._v("BaudRate [integer]:")]),t._v(" Defines the Baudrate for the communication. It must match the baudrate of the target device")]),t._v(" "),e("li",[t._v("**ReceivedDataType [combobox selection]"),e("img",{staticClass:"emoji",attrs:{draggable:"false",alt:"ðŸ˜—",src:"https://twemoji.maxcdn.com/2/svg/1f617.svg"}}),t._v("*can be used to indicate other data type like binary integer type etc. (currently, only string is supported)")]),t._v(" "),e("li",[t._v("**SendDataType [combobox selection]"),e("img",{staticClass:"emoji",attrs:{draggable:"false",alt:"ðŸ˜—",src:"https://twemoji.maxcdn.com/2/svg/1f617.svg"}}),t._v("*can be used to indicate data type for sending (currently, string is supported and a selectable termination character can be added)")])])])}),[],!1,null,null,null);e.default=s.exports},825:function(t,e,r){t.exports=r.p+"assets/img/comport.81304d08.jpg"}}]);