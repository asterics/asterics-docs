(window.webpackJsonp=window.webpackJsonp||[]).push([[235],{1191:function(t,e,r){"use strict";r.r(e);var n=r(2),s=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"string-append"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string-append"}},[t._v("#")]),t._v(" String Append")]),t._v(" "),e("h2",{attrs:{id:"component-type-processor-subcategory-event-and-string-processing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#component-type-processor-subcategory-event-and-string-processing"}},[t._v("#")]),t._v(" Component Type: Processor (Subcategory: Event and String Processing)")]),t._v(" "),e("p",[t._v("Appends an incoming string or ASCII character to a stringbuffer, the updated stringbuffer is sent to an output port. Incoming events are available to send the final string to a dedicated output port and to clear the stringbuffer (or set it to a default value respectively).")]),t._v(" "),e("p",[e("img",{attrs:{src:r(758),alt:"Screenshot: StringAppend plugin",title:"Screenshot: StringAppend plugin"}})]),t._v(" "),e("p",[t._v("StringAppend plugin")]),t._v(" "),e("h2",{attrs:{id:"input-port-description"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description"}},[t._v("#")]),t._v(" Input Port Description")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("inStr [string]:")]),t._v(" String input port.")]),t._v(" "),e("li",[e("strong",[t._v("inChar [integer]:")]),t._v(" ASCII code input port.")])]),t._v(" "),e("h2",{attrs:{id:"output-port-description"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output-port-description"}},[t._v("#")]),t._v(" Output Port Description")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("actResult [string]:")]),t._v(" String output port for current stringbuffer content.")]),t._v(" "),e("li",[e("strong",[t._v("finalResult [string]:")]),t._v(" String output port for final stringbuffer content (triggered by event or enter).")])]),t._v(" "),e("h2",{attrs:{id:"event-listener-ports"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-ports"}},[t._v("#")]),t._v(" Event Listener Ports")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("sendNow:")]),t._v(" sends the current content of the stringbuffer to the “finalResult” output port.")]),t._v(" "),e("li",[e("strong",[t._v("sendNowAndClear:")]),t._v(" sends the current content of the stringbuffer to the “finalResult” output port and sets the stringbuffer to the default value.")]),t._v(" "),e("li",[e("strong",[t._v("deleteCharacter:")]),t._v(" deletes the last character of the stringbuffer.")]),t._v(" "),e("li",[e("strong",[t._v("clear:")]),t._v(" sets the stringbuffer to the default value.")])]),t._v(" "),e("h2",{attrs:{id:"properties"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("autoSendAtEnter [boolean]:")]),t._v(" If true, the stringbuffer is sent and cleared when the ASCII value for Enter/Return is received by the inChar input port.")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("defaultValue [string]:")]),t._v(" An optional string text which is used a initial value for the stringbuffer.")])])])])}),[],!1,null,null,null);e.default=s.exports},758:function(t,e,r){t.exports=r.p+"assets/img/stringappend.ffa6ba12.jpg"}}]);