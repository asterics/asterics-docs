(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{1093:function(e,t,s){"use strict";s.r(t);var i=s(2),r=Object(i.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"frontmatter-title"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),t("p",[e._v("Component Type: Actuator (Subcategory: File System)")]),e._v(" "),t("p",[e._v("The ModelSwitcher component allows to switch from the running model to another model which will be deployed and started. This makes it possible to build menus for different use-cases or switch from one use-case to another.")]),e._v(" "),t("p",[t("img",{attrs:{src:s(637),alt:"Screenshot: ModelSwitcher plugin",title:"Screenshot: ModelSwitcher plugin"}})]),e._v(" "),t("p",[e._v("ModelSwitcher plugin")]),e._v(" "),t("h2",{attrs:{id:"input-port-description"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description"}},[e._v("#")]),e._v(" Input Port Description")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("modelName [string]:")]),e._v(" The name of the model (including extension, for example “CameraMouse_sensitive.acs”. The switch is performed as soon as the model name is received. The model must exist in the ARE/models folder of the runtime environment.")])]),e._v(" "),t("h2",{attrs:{id:"event-listener-description"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-description"}},[e._v("#")]),e._v(" Event Listener Description")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("switchModel:")]),e._v(" An incoming event on this port will switch to the default model.")])]),e._v(" "),t("h2",{attrs:{id:"properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("model[string]:")]),e._v(" A fixed model name can be give here. This model must exist in the ARE/models folder of the runtime environment. The model switch is performed when the switchModel event is received.")])])])}),[],!1,null,null,null);t.default=r.exports},637:function(e,t,s){e.exports=s.p+"assets/img/modelswitcher.9f5158c5.jpg"}}]);