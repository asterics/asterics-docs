(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{385:function(e,t,s){e.exports=s.p+"assets/img/quickstart11.c2ae8b7e.png"},440:function(e,t,s){e.exports=s.p+"assets/img/quickstart10.a588225d.png"},441:function(e,t,s){e.exports=s.p+"assets/img/quickstart12.c7981783.png"},442:function(e,t,s){e.exports=s.p+"assets/img/quickstart13.68c18f17.png"},443:function(e,t,s){e.exports=s.p+"assets/img/quickstart14.3781e998.png"},444:function(e,t,s){e.exports=s.p+"assets/img/quickstart15.2c0687da.png"},445:function(e,t,s){e.exports=s.p+"assets/img/quickstart16.4b39a603.png"},446:function(e,t,s){e.exports=s.p+"assets/img/quickstart17.a2ecc137.png"},447:function(e,t,s){e.exports=s.p+"assets/img/quickstart18.a949722d.png"},826:function(e,t,s){"use strict";s.r(t);var n=s(15),o=Object(n.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"model-creation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#model-creation","aria-hidden":"true"}},[e._v("#")]),e._v(" Model Creation")]),e._v(" "),n("h2",{attrs:{id:"camera-mouse-simple"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#camera-mouse-simple","aria-hidden":"true"}},[e._v("#")]),e._v(" Camera Mouse Simple")]),e._v(" "),n("p",[e._v("A model is a collection of 1 to n components, where a component represents a plugin\nof the ARE. These components are connected via cannels (for data connections) and\nevent channels (representing events). The following example will illustrate the\ncreation of a simple webcam mouse, using the position of the nose to control the\ncursor and opening the mouth to trigger a mouse click. This model requires a\nconnected and installed webcam.")]),e._v(" "),n("h3",{attrs:{id:"add-facetracking"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#add-facetracking","aria-hidden":"true"}},[e._v("#")]),e._v(" Add Facetracking")]),e._v(" "),n("p",[e._v("In a first step, start the ACS and the ARE using the ACS.exe and ARE.exe short cuts.\nIn the ACS window select the tab "),n("strong",[e._v("Components")]),e._v(", then "),n("strong",[e._v("Sensors")]),e._v(" and within the\nsensors the menu item "),n("strong",[e._v("Computer Vision")]),e._v(". There select the component\nFacetrackerLK. The component is now on the drawing area and, if the component is\nselected, properties can be set (or changed) in the rightmost part of the ACS window.")]),e._v(" "),n("p",[n("img",{attrs:{src:s(440),alt:"ACS - A first example (1/8)"}})]),e._v(" "),n("h3",{attrs:{id:"add-mouse"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#add-mouse","aria-hidden":"true"}},[e._v("#")]),e._v(" Add Mouse")]),e._v(" "),n("p",[e._v("The next needed component is the "),n("strong",[e._v("Mouse")]),e._v(", it can be found by selecting "),n("strong",[e._v("Actuators")]),e._v(" -\n"),n("strong",[e._v("Input Device Emulation")]),e._v(". After the insert, select the Mouse component and adapt\nthe properties. Deactivate absolutePosition and set the "),n("code",[e._v("xMax")]),e._v(" and "),n("code",[e._v("yMax")]),e._v(" to your\nscreen resolution.")]),e._v(" "),n("p",[e._v("In the next step, connect the noseX and the noseY outputs of the "),n("strong",[e._v("FacetrackerLKd")]),e._v("\nwith the mouseX and mouseY inputs of the Mouse. Finally, it should look like the\nscreenshot below.")]),e._v(" "),n("p",[n("img",{attrs:{src:s(385),alt:"ACS - A first example (2/8)"}})]),e._v(" "),n("h3",{attrs:{id:"add-mouse-click"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#add-mouse-click","aria-hidden":"true"}},[e._v("#")]),e._v(" Add Mouse Click")]),e._v(" "),n("p",[e._v("The model now would be able to use the coordinates of the nose to control the\nmouse cursor, but the mouse click is still missing.\nFor the mouse clicking functionality, we first need the "),n("strong",[e._v("MathEvaluatord")]),e._v(" ("),n("strong",[e._v("Processorsd")]),e._v(" -\n"),n("strong",[e._v("Basic Mathd")]),e._v(") plugin. We connect the noseY output of the "),n("strong",[e._v("FacetrackerLKd")]),e._v(" the with\nthe inA input of the "),n("strong",[e._v("MathEvaluatord")]),e._v(" and likewise the chinY with inB. In the properties\nof the "),n("strong",[e._v("MathEvaluatord")]),e._v(", we set the property expression to "),n("strong",[e._v("b-ad")]),e._v(".")]),e._v(" "),n("p",[n("img",{attrs:{src:s(441),alt:"ACS - A first example (3/8)"}})]),e._v(" "),n("p",[e._v("We will "),n("strong",[e._v("Differentiate")]),e._v(" ("),n("strong",[e._v("Processorsd")]),e._v(" -> "),n("strong",[e._v("Basic Mathd")]),e._v(") the out value to react on a fast\nchange of the nose to chin distance.")]),e._v(" "),n("p",[n("img",{attrs:{src:s(442),alt:"ACS - A first example (4/8)"}})]),e._v(" "),n("p",[e._v("This processed value will then be forwarded to a "),n("strong",[e._v("Threshold")]),e._v(" ("),n("strong",[e._v("Processors")]),e._v(" -> "),n("strong",[e._v("Basic\nMath")]),e._v(") component. Set the thresholdLow and thresholdHigh values to 30.")]),e._v(" "),n("p",[n("img",{attrs:{src:s(443),alt:"ACS - A first example (5/8)"}})]),e._v(" "),n("p",[e._v("As a final step, connect the event trigger output of the "),n("strong",[e._v("Threshold")]),e._v(" with the event\nlistener input of the "),n("strong",[e._v("Mouse")]),e._v(" â€“ the event triggers and listeners are at the bottom of the\ncomponents. After the connection has been made, set the leftClick to eventPosEdge\nin the property editor at the right. If everything was done right, it should look like the\nfollowing screenshot:")]),e._v(" "),n("p",[n("img",{attrs:{src:s(444),alt:"ACS - A first example (6/8)"}})]),e._v(" "),n("h3",{attrs:{id:"test-model"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#test-model","aria-hidden":"true"}},[e._v("#")]),e._v(" Test Model")]),e._v(" "),n("p",[e._v("Now, upload the model to the ARE and press the "),n("strong",[e._v("Start Model")]),e._v(" button. A window with\nthe camera screen will appear, marking with a green and yellow circle - the position\nof nose and chin. Press the "),n("strong",[e._v("Stop Model")]),e._v(" button or press F7 to stop the model and\nget the control of the mouse back. Below is a screenshot of the system, when\nrunning.")]),e._v(" "),n("p",[n("img",{attrs:{src:s(445),alt:"ACS - A first example (7/8)"}})]),e._v(" "),n("p",[e._v("Congratulations, your first AsTeRICS model is running!")]),e._v(" "),n("h3",{attrs:{id:"reducing-tremor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reducing-tremor","aria-hidden":"true"}},[e._v("#")]),e._v(" Reducing Tremor")]),e._v(" "),n("p",[e._v("You might have noticed that the mouse pointer has a tremor, because the head is\nalways in movement to a certain extent. To reduce this tremor, an "),n("strong",[e._v("Averager")]),e._v("\n("),n("strong",[e._v("Processors")]),e._v(" -> "),n("strong",[e._v("Basic Math")]),e._v(") will be used to smoothen the X coordinates and\nanother "),n("strong",[e._v("Averager")]),e._v(" for the Y coordinates between the "),n("strong",[e._v("FacetrackerLK")]),e._v(" and the\n"),n("strong",[e._v("Mouse")]),e._v(". The bufferSize in the properties will be set to 5.")]),e._v(" "),n("p",[n("img",{attrs:{src:s(446),alt:"ACS - A first example (8/8)"}})]),e._v(" "),n("p",[e._v("That's all, just upload the model and start it now.")]),e._v(" "),n("h3",{attrs:{id:"adjusting-the-webcam"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#adjusting-the-webcam","aria-hidden":"true"}},[e._v("#")]),e._v(" Adjusting the Webcam")]),e._v(" "),n("p",[e._v("If you don't like the position of the webcam after starting the model, you can set a\ndifferent start position. Select the "),n("strong",[e._v("GUI Designer")]),e._v(" tab above the drawing area and\nmove the webcam window to an area, which is comfortable to you. Also the size of\nthe window can be adjusted.")]),e._v(" "),n("p",[n("img",{attrs:{src:s(447),alt:"GUI Designer"}})]),e._v(" "),n("p",[e._v("Upload and start the model to work with the changes.")]),e._v(" "),n("h2",{attrs:{id:"camera-mouse-advanced"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#camera-mouse-advanced","aria-hidden":"true"}},[e._v("#")]),e._v(" Camera Mouse Advanced")]),e._v(" "),n("p",[e._v("If your first model works, try this more "),n("a",{attrs:{href:"https://github.com/asterics/AsTeRICS/blob/master/Documentation/AsTeRICS_CameraMouseCreation_StepbyStep_Tutorial.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("advanced step-by-step tutorial"),n("OutboundLink")],1),e._v(" based on slides.")]),e._v(" "),n("EditLink")],1)},[],!1,null,null,null);t.default=o.exports}}]);