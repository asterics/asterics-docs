(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{1101:function(e,t,r){"use strict";r.r(t);var i=r(19),n=Object(i.a)({},function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"comport"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#comport","aria-hidden":"true"}},[e._v("#")]),e._v(" ComPort")]),e._v(" "),i("p",[e._v("Component Type: Processor (Subcategory: Communication)")]),e._v(" "),i("p",[e._v("The ComPort plugin can be used to send and receive data from serial devices (e.g. microcontrollers/embedded devices/wireless links etc.) via a COM port or virtual COM port. The plugin provides support for different data formats of serial communication, e.g. string or binary")]),e._v(" "),i("p",[i("img",{attrs:{src:r(663),alt:"Screenshot: COMPort plugin",title:"Screenshot: COMPort plugin"}})]),e._v(" "),i("p",[e._v("COMPort plugin")]),e._v(" "),i("h2",{attrs:{id:"input-port-description"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description","aria-hidden":"true"}},[e._v("#")]),e._v(" Input Port Description")]),e._v(" "),i("ul",[i("li",[i("strong",[e._v("send [string]:")]),e._v(" string which will be sent to the microcontroller / embedded module")])]),e._v(" "),i("h2",{attrs:{id:"output-port-description"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#output-port-description","aria-hidden":"true"}},[e._v("#")]),e._v(" Output Port Description")]),e._v(" "),i("ul",[i("li",[i("strong",[e._v("received [string]:")]),e._v(" string which has been received (was sent from the microcontroller / embedded module)")])]),e._v(" "),i("h2",{attrs:{id:"event-listener-description"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-description","aria-hidden":"true"}},[e._v("#")]),e._v(" Event Listener Description")]),e._v(" "),i("ul",[i("li",[i("strong",[e._v("enablePlugin:")]),e._v(" Enables the functionality of this plugin.")]),e._v(" "),i("li",[i("strong",[e._v("disablePlugin:")]),e._v(" Disables the functionality of this plugin. Any open COM port is closed and no new values are received.")])]),e._v(" "),i("h2",{attrs:{id:"properties"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),i("ul",[i("li",[i("strong",[e._v("enabled [boolean]:")]),e._v(" If true (default), the plugin is enabled, if false the plugin does nothing and doesnâ€™t attempt to open the given COM port.")]),e._v(" "),i("li",[i("strong",[e._v("ComPort [string]:")]),e._v(" Defines the COM Port of the target serial device. e.g. COM0")]),e._v(" "),i("li",[i("strong",[e._v("BaudRate [integer]:")]),e._v(" Defines the Baudrate for the communication. It must match the baudrate of the target device")]),e._v(" "),i("li",[e._v("**ReceivedDataType [combobox selection]ðŸ˜—*can be used to indicate other data type like binary integer type etc. (currently, only string is supported)")]),e._v(" "),i("li",[e._v("**SendDataType [combobox selection]ðŸ˜—*can be used to indicate data type for sending (currently, string is supported and a selectable termination character can be added)")])]),e._v(" "),i("EditLink")],1)},[],!1,null,null,null);t.default=n.exports},663:function(e,t,r){e.exports=r.p+"assets/img/comport.81304d08.jpg"}}]);