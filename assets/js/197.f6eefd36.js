(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{1146:function(e,t,i){"use strict";i.r(t);var n=i(2),o=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"frontmatter-title"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),t("p",[e._v("Component Type: Processor (Subcategory: Event and String Processing)")]),e._v(" "),t("p",[e._v("This component counts events. It can increase and decrease a counts via incoming events.")]),e._v(" "),t("p",[t("img",{attrs:{src:i(714),alt:"Screenshot: EventCounter plugin",title:"Screenshot: EventCounter plugin"}})]),e._v(" "),t("p",[e._v("EventCounter plugin")]),e._v(" "),t("h2",{attrs:{id:"input-port-description"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description"}},[e._v("#")]),e._v(" Input Port Description")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("setValue [integer]:")]),e._v(" Sets the event counter to the incoming value. Note that this value is not propagated to the output port (to avoid loops).")])]),e._v(" "),t("h2",{attrs:{id:"output-port-description"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#output-port-description"}},[e._v("#")]),e._v(" Output Port Description")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("output [integer]:")]),e._v(" Sends the number of events.")])]),e._v(" "),t("h2",{attrs:{id:"event-listener-description"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-description"}},[e._v("#")]),e._v(" Event Listener Description")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("increase:")]),e._v(" Increases the number of events.")]),e._v(" "),t("li",[t("strong",[e._v("decrease:")]),e._v(" Decreases the number of events.")]),e._v(" "),t("li",[t("strong",[e._v("resetToZero:")]),e._v(" Sets the event counter to zero.")]),e._v(" "),t("li",[t("strong",[e._v("resetToInitial:")]),e._v(" Sets the event counter to the initial value (property).")]),e._v(" "),t("li",[t("strong",[e._v("sendNow:")]),e._v(" sendes the current value of the counter to the output port")])]),e._v(" "),t("h2",{attrs:{id:"properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[e._v("mode [integer]:")]),e._v(" Defines counting mode:")])]),e._v(" "),t("li",[t("p",[t("em",[e._v("no limit:")]),e._v(" The component counts events without any limitation.")])]),e._v(" "),t("li",[t("p",[t("em",[e._v("limit maximum:")]),e._v(" In this mode, the maximum value of the counter is limited by the maxValue property.")])]),e._v(" "),t("li",[t("p",[t("em",[e._v("limit minimum:")]),e._v(" In this mode, the minimum value of the counter is limited by the minValue property.")])]),e._v(" "),t("li",[t("p",[t("em",[e._v("limit minimum and maximum:")]),e._v(" In this mode, both maximum and minimum values of the counter are limited by the maxValue amd minValue properties.")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("minValue [integer]:")]),e._v(" Defines the minimum value of the counter.")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("maxValue [integer]:")]),e._v(" Defines the maximum value of the counter.")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("initialValue [integer]:")]),e._v(" Defines the initial value of the counter.")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("wrapAround [boolean]:")]),e._v(" if selected and the appropriate mode is set, exceeding the maximum value will wrap to the minimum value and vice versa.")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("sendInitialValue [boolean]:")]),e._v(" if selected, the initial value is sent at the startup.")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("autoSend [boolean]:")]),e._v(" if selected, the changes of the event counter are sent immediately to the output port")])])])])}),[],!1,null,null,null);t.default=o.exports},714:function(e,t,i){e.exports=i.p+"assets/img/eventcounter.2b933163.jpg"}}]);