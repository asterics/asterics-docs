(window.webpackJsonp=window.webpackJsonp||[]).push([[902],{1405:function(t,e,o){"use strict";o.r(e);var s=o(21),i=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"skywatchermount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#skywatchermount"}},[t._v("#")]),t._v(" SkyWatcherMount")]),t._v(" "),s("h3",{attrs:{id:"component-type-actuator-subcategory-others"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#component-type-actuator-subcategory-others"}},[t._v("#")]),t._v(" Component Type: Actuator (Subcategory: Others)")]),t._v(" "),s("p",[t._v("The SkyWatcher plugin can be used to control telescope mounts using the Nexstar 5 protocol, e.g. Skywatcher AllView, Skywatcher Merlin via Synscan hand control.")]),t._v(" "),s("p",[s("img",{attrs:{src:o(2797),alt:"Screenshot: SkyWatcherMount plugin",title:"Screenshot: SkyWatcherMount plugin"}}),s("br"),t._v("\nSkyWatcherMount plugin")]),t._v(" "),s("h2",{attrs:{id:"requirements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[t._v("#")]),t._v(" Requirements")]),t._v(" "),s("p",[t._v("A Nexstar5 compatible telescope mount connected to the target computer via a serial connection")]),t._v(" "),s("h2",{attrs:{id:"input-port-description"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description"}},[t._v("#")]),t._v(" Input Port Description")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("speed [integer]:")]),t._v(" defines the movement speed of the mount (range: 0-9)")]),t._v(" "),s("li",[s("strong",[t._v("panPosition [integer]:")]),t._v(" defines the target position in steps for the pan axis for the goto command")]),t._v(" "),s("li",[s("strong",[t._v("tiltPosition [integer]:")]),t._v(" defines the target position in steps for the tilt axis for the goto command")]),t._v(" "),s("li",[s("strong",[t._v("endPointLeft [integer]:")]),t._v(" defines the maximum position the pan axis can move to the left")]),t._v(" "),s("li",[s("strong",[t._v("endPointRight [integer]:")]),t._v(" defines the maximum position the pan axis can move to the right")]),t._v(" "),s("li",[s("strong",[t._v("endPointUp [integer]:")]),t._v(" defines the maximum position the tilt axis can move up")]),t._v(" "),s("li",[s("strong",[t._v("endPointDown [integer]:")]),t._v(" defines the maximum position the tilt axis can move down")])]),t._v(" "),s("h2",{attrs:{id:"output-port-description"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#output-port-description"}},[t._v("#")]),t._v(" Output Port Description")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("posX [integer]:")]),t._v(" the actual position of the pan axis in steps")]),t._v(" "),s("li",[s("strong",[t._v("posY [integer]:")]),t._v(" the actual position of the tilt axis in steps")])]),t._v(" "),s("h2",{attrs:{id:"event-listener-description"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-description"}},[t._v("#")]),t._v(" Event Listener Description")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("goLeft:")]),t._v(" moves the mount endless to the left")]),t._v(" "),s("li",[s("strong",[t._v("goRight:")]),t._v(" moves the mount endless to the right")]),t._v(" "),s("li",[s("strong",[t._v("goUp:")]),t._v(" moves the mount endless upwards")]),t._v(" "),s("li",[s("strong",[t._v("goDown:")]),t._v(" moves the mount endless downwards")]),t._v(" "),s("li",[s("strong",[t._v("stopPan:")]),t._v(" stops the movement of the pan axis")]),t._v(" "),s("li",[s("strong",[t._v("stopTilt:")]),t._v(" stops the movement of the tilt axis")]),t._v(" "),s("li",[s("strong",[t._v("stop:")]),t._v(" stops the movement of the pan and tilt axis")]),t._v(" "),s("li",[s("strong",[t._v("goToPanPosition:")]),t._v(" move the pan axis to the step position specified by the panPosition input port")]),t._v(" "),s("li",[s("strong",[t._v("goToTiltPosition:")]),t._v(" move the tilt axis to the step position specified by the tiltPosition input port")]),t._v(" "),s("li",[s("strong",[t._v("triggerOn:")]),t._v(" if the mount has a shutter for a digital camera, the shutter is set to 1")]),t._v(" "),s("li",[s("strong",[t._v("triggerOff:")]),t._v(" if the mount has a shutter for a digital camera, the shutter is set to 0")])]),t._v(" "),s("h2",{attrs:{id:"properties"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("SerialPort [string]:")]),t._v(" The serial port of the mount, e.g. COM1")]),t._v(" "),s("li",[s("strong",[t._v("EndPointsActive [boolean]:")]),t._v(" defines if the movement boundaries set by the endpoints are active or not.")])])])}),[],!1,null,null,null);e.default=i.exports},2797:function(t,e,o){t.exports=o.p+"assets/img/skywatcher.b394a10b.png"}}]);