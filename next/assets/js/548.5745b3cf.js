(window.webpackJsonp=window.webpackJsonp||[]).push([[548],{2325:function(e,t,s){e.exports=s.p+"assets/img/ModelSwitcher.9f5158c5.jpg"},718:function(e,t,s){"use strict";s.r(t);var o=s(1),r=Object(o.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"model-switcher"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#model-switcher"}},[e._v("#")]),e._v(" Model Switcher")]),e._v(" "),o("h3",{attrs:{id:"component-type-actuator-subcategory-file-system"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#component-type-actuator-subcategory-file-system"}},[e._v("#")]),e._v(" Component Type: Actuator (Subcategory: File System)")]),e._v(" "),o("p",[e._v("The ModelSwitcher component allows to switch from the running model to another model which will be deployed and started. This makes it possible to build menus for different use-cases or switch from one use-case to another.")]),e._v(" "),o("p",[o("img",{attrs:{src:s(2325),alt:"Screenshot: ModelSwitcher plugin",title:"Screenshot: ModelSwitcher plugin"}}),o("br"),e._v("\nModelSwitcher plugin")]),e._v(" "),o("h2",{attrs:{id:"input-port-description"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description"}},[e._v("#")]),e._v(" Input Port Description")]),e._v(" "),o("ul",[o("li",[o("strong",[e._v("modelName [string]:")]),e._v(" The name of the model (including extension, for example “CameraMouse_sensitive.acs”. The switch is performed as soon as the model name is received. The model must exist in the ARE/models folder of the runtime environment.")])]),e._v(" "),o("h2",{attrs:{id:"event-listener-description"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-description"}},[e._v("#")]),e._v(" Event Listener Description")]),e._v(" "),o("ul",[o("li",[o("strong",[e._v("switchModel:")]),e._v(" An incoming event on this port will switch to the default model.")])]),e._v(" "),o("h2",{attrs:{id:"properties"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),o("ul",[o("li",[o("strong",[e._v("model[string]:")]),e._v(" A fixed model name can be give here. This model must exist in the ARE/models folder of the runtime environment. The model switch is performed when the switchModel event is received.")])])])}),[],!1,null,null,null);t.default=r.exports}}]);