(window.webpackJsonp=window.webpackJsonp||[]).push([[246],{1145:function(t,e,o){t.exports=o.p+"assets/img/buttongrid.5b8ad03c.jpg"},640:function(t,e,o){"use strict";o.r(e);var n=o(3),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"frontmatter-title"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),n("p",[t._v("Component Type: Sensor (Subcategory: Graphical User Interface)")]),t._v(" "),n("p",[t._v("The Button Grid component is a simple GUI on-screen keyboard. It sends events after buttons have been pressed.")]),t._v(" "),n("p",[n("img",{attrs:{src:o(1145),alt:"Screenshot: ButtonGrid plugin",title:"Screenshot: ButtonGrid plugin"}})]),t._v(" "),n("p",[t._v("ButtonGrid plugin")]),t._v(" "),n("h2",{attrs:{id:"event-trigger-description"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-trigger-description"}},[t._v("#")]),t._v(" Event Trigger Description")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("button1…button20:")]),t._v(" These events are fired as the corresponding buttons are pressed.")])]),t._v(" "),n("h2",{attrs:{id:"properties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("caption [string]:")]),t._v(" The text shown on the component caption.")]),t._v(" "),n("li",[n("strong",[t._v("horizontalOrientation [boolean]:")]),t._v(" If selected, the keyboard will be placed horizontally, otherwise the keyboard will be placed vertically.")]),t._v(" "),n("li",[n("strong",[t._v("textColor [integer, combobox selection]:")]),t._v(" The color of the caption text (“default” keeps the standard setting)")]),t._v(" "),n("li",[n("strong",[t._v("backgroundColor [integer, combobox selection]:")]),t._v(" The color of the button background (“default” keeps the standard setting)")]),t._v(" "),n("li",[n("strong",[t._v("borderColor [integer, combobox selection]:")]),t._v(" The color of the button frame (“default” keeps the standard setting)")]),t._v(" "),n("li",[n("strong",[t._v("borderThickness [integer]:")]),t._v(" The size of the button frame")]),t._v(" "),n("li",[n("strong",[t._v("selectionFrameColor [integer, combobox selection]:")]),t._v(" The color of the selection frame (active button, “default” keeps the standard setting)")]),t._v(" "),n("li",[n("strong",[t._v("selectionFrameThickness [integer]:")]),t._v(" The size of the selection frame")]),t._v(" "),n("li",[n("strong",[t._v("displayGUI [boolean]:")]),t._v(" if selected, the GUI of this component will be displayed - if not, the GUI will be hidden and disabled.")]),t._v(" "),n("li",[n("strong",[t._v("buttonCaption1…buttonCaption20 [string]:")]),t._v(" The text shown on the buttons:1…20. If the text is empty, the button will not be displayed at all.")]),t._v(" "),n("li",[n("strong",[t._v("toolTip1…toolTip20 [string]:")]),t._v(" The text shown as tooltip when the mouse hovers over a corresponding button. If the text is empty, no tooltip will be displayed.")])])])}),[],!1,null,null,null);e.default=r.exports}}]);