(window.webpackJsonp=window.webpackJsonp||[]).push([[1512],{1077:function(t,e,r){"use strict";r.r(e);var n=r(2),i=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("hr"),t._v(" "),r("h2",{attrs:{id:"title-stringformatter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#title-stringformatter"}},[t._v("#")]),t._v(" title: StringFormatter")]),t._v(" "),r("h1",{attrs:{id:"stringformatter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#stringformatter"}},[t._v("#")]),t._v(" StringFormatter")]),t._v(" "),r("p",[t._v("Component Type: Processor (Subcategory: Event and String Processing)")]),t._v(" "),r("p",[t._v("The StringFormatter plugin can be used to create a printf-style formatted text with numbers or strings as input variables. The output string is formatted according to a given format string, see "),r("a",{attrs:{href:"https://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java class Formatter"),r("OutboundLink")],1),t._v(".")]),t._v(" "),r("h2",{attrs:{id:"input-port-description"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description"}},[t._v("#")]),t._v(" Input Port Description")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("in1String [string]:")]),t._v(" Input variable of type string, referenced with %1$ in the format string.")]),t._v(" "),r("li",[r("strong",[t._v("in2String [string]:")]),t._v(" Input variable of type string, referenced with %2$ in the format string.")]),t._v(" "),r("li",[r("strong",[t._v("in3Double [string]:")]),t._v(" Input variable of type double, referenced with %3$ in the format string.")]),t._v(" "),r("li",[r("strong",[t._v("in4Integer [string]:")]),t._v(" Input variable of type integer, referenced with %4$ in the format string.")]),t._v(" "),r("li",[r("strong",[t._v("setFormatStr [string]:")]),t._v(" Sets a new format string.")])]),t._v(" "),r("h2",{attrs:{id:"output-port-description"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#output-port-description"}},[t._v("#")]),t._v(" Output Port Description")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("formattedStr [string]:")]),t._v(" Formatted string according to input variables and format string.")])]),t._v(" "),r("h2",{attrs:{id:"properties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("formatString [string]:")]),t._v(" The format string to use, see Java class Formatter. The input ports in1XXX-in4XXX represent the formatable variables and can be referenced with the %n$ syntax.")]),t._v(" "),r("li",[r("strong",[t._v("defaultIn1String [string]:")]),t._v(" The default value of in1String. Used if there is no input port value.")]),t._v(" "),r("li",[r("strong",[t._v("defaultIn2String [string]:")]),t._v(" The default value of in2String. Used if there is no input port value.")]),t._v(" "),r("li",[r("strong",[t._v("defaultIn3Double [double]:")]),t._v(" The default value of in3Double. Used if there is no input port value.")]),t._v(" "),r("li",[r("strong",[t._v("defaultIn4Integer [integer]:")]),t._v(" The default value of in4Integer. Used if there is no input port value.")]),t._v(" "),r("li",[r("strong",[t._v("sendOnlyByEvent [boolean]:")]),t._v(" Only sends the value of the formatted string, if the event sendFormattedStr is received.")])])])}),[],!1,null,null,null);e.default=i.exports}}]);