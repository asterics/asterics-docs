(window.webpackJsonp=window.webpackJsonp||[]).push([[1407],{3681:function(t,e,r){t.exports=r.p+"assets/img/quantizer.e59f2f05.jpg"},485:function(t,e,r){"use strict";r.r(e);var i=r(22),a=Object(i.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"quantizer"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#quantizer"}},[t._v("#")]),t._v(" Quantizer")]),t._v(" "),i("p",[t._v("Component Type: Processor (Subcategory: Basic Math)")]),t._v(" "),i("p",[t._v("This plugin performs a quantization of the input signal. The value of the output signal is the input value rounded to the nearest multiple of the quantizationStep property value.")]),t._v(" "),i("p",[i("img",{attrs:{src:r(3681),alt:"Screenshot: Quantizer plugin",title:"Screenshot: Quantizer plugin"}})]),t._v(" "),i("p",[t._v("Quantizer plugin")]),t._v(" "),i("h2",{attrs:{id:"input-port-description"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description"}},[t._v("#")]),t._v(" Input Port Description")]),t._v(" "),i("ul",[i("li",[i("strong",[t._v("input [double]:")]),t._v(" Input port for the values to be quantized.")])]),t._v(" "),i("h2",{attrs:{id:"output-port-description"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#output-port-description"}},[t._v("#")]),t._v(" Output Port Description")]),t._v(" "),i("ul",[i("li",[i("strong",[t._v("output ["),i("strong",[i("strong",[t._v("double")])]),t._v("]:")]),t._v(" Output port for the quantized values.")])]),t._v(" "),i("h2",{attrs:{id:"properties"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),i("ul",[i("li",[i("strong",[t._v("quantizationStep [double]:")]),t._v(" The quantization step.")])])])}),[],!1,null,null,null);e.default=a.exports}}]);