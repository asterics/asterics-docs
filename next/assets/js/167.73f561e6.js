(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{2473:function(e,t,n){e.exports=n.p+"assets/img/SignalShaper.cb5abd80.jpg"},2474:function(e,t,n){e.exports=n.p+"assets/img/SignalShaper.0a42d503.png"},905:function(e,t,n){"use strict";n.r(t);var s=n(1),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"signal-shaper"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signal-shaper"}},[e._v("#")]),e._v(" Signal Shaper")]),e._v(" "),s("h3",{attrs:{id:"component-type-sensor-subcategory-simulation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#component-type-sensor-subcategory-simulation"}},[e._v("#")]),e._v(" Component Type: Sensor (Subcategory: Simulation)")]),e._v(" "),s("p",[e._v("The SignalShaper component can be used to generate signal composed from basic linear functions.")]),e._v(" "),s("p",[s("img",{attrs:{src:n(2473),alt:"Screenshot:SignalShaper plugin",title:"Screenshot: SignalShaper plugin"}}),s("br"),e._v("\nSignalShaper plugin")]),e._v(" "),s("p",[s("img",{attrs:{src:n(2474),alt:"Examplecomposed signal created from three linear signals",title:"Example composed signal"}}),s("br"),e._v("\nExample composed signal created from three linear signals")]),e._v(" "),s("h2",{attrs:{id:"output-port-description"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#output-port-description"}},[e._v("#")]),e._v(" Output Port Description")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("output [double]:")]),e._v(" The output port for the signal.")])]),e._v(" "),s("h2",{attrs:{id:"event-listener-description"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-description"}},[e._v("#")]),e._v(" Event Listener Description")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("start:")]),e._v(" Start the signal generation. If this event is received during signal generation, the signal generation is restarted.")])]),e._v(" "),s("h2",{attrs:{id:"properties"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),s("ul",[s("li",[s("p",[s("strong",[e._v("interval [integer]:")]),e._v(" The sampling  rate in milliseconds.")])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("numberOfLines [integer]:")]),e._v(" The number of linear signals used to shape the output signal.")])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("behaviourAfterFinish [**"),s("strong",[e._v("integer*")]),e._v("*]:")]),e._v(" Defines the component behaviour after all signal lines have been sent:")]),e._v(" "),s("ul",[s("li",[s("p",[s("strong",[e._v("do nothing:")]),e._v(" stop any action.")])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("repeat:")]),e._v(" Send the signal lines from beginning.")])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("send the last value:")]),e._v(" Continue to send the last value of the signal.")])])])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("beginValue1…beginValue5 [double]:")]),e._v(" The begin value of the linear signals.")])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("endValue1…endValue5 [double]:")]),e._v(" The end value of the linear signals.")])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("time1…time5 [integer]:")]),e._v(" The duration of the linear signals in milliseconds.")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);