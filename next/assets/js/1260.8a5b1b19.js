(window.webpackJsonp=window.webpackJsonp||[]).push([[1260],{1521:function(t,e,s){"use strict";s.r(e);var n=s(1),o=Object(n.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"sampleandhold"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sampleandhold"}},[t._v("#")]),t._v(" SampleAndHold")]),t._v(" "),n("p",[t._v("Component Type: Processor (Subcategory: Basic Math)")]),t._v(" "),n("p",[t._v("This component provides a sample-and-hold function for up to 4 input signals. This can be useful for storing a particular sensor values (e.g. for sensor calibration purpose).")]),t._v(" "),n("p",[n("img",{attrs:{src:s(3498),alt:"Screenshot: SampleAndHold plugin",title:"Screenshot: SampleAndHold plugin"}}),n("br"),t._v("\nSampleAndHold plugin")]),t._v(" "),n("h2",{attrs:{id:"input-port-description"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description"}},[t._v("#")]),t._v(" Input Port Description")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("in1 - in4 [double]:")]),t._v(" four input ports for double values to be captured on demand.")])]),t._v(" "),n("h2",{attrs:{id:"output-port-description"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#output-port-description"}},[t._v("#")]),t._v(" Output Port Description")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("out1 - out4 [double]:")]),t._v(" last captured values.")])]),t._v(" "),n("h2",{attrs:{id:"event-listener-description"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-description"}},[t._v("#")]),t._v(" Event Listener Description")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("sampleNow:")]),t._v(" When an event comes in, the signal values of the input ports are captured and sent to the output ports.")])])])}),[],!1,null,null,null);e.default=o.exports},3498:function(t,e,s){t.exports=s.p+"assets/img/SampleAndHold.5e355178.jpg"}}]);