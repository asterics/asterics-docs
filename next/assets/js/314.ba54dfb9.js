(window.webpackJsonp=window.webpackJsonp||[]).push([[314],{907:function(t,e,a){"use strict";a.r(e);var o=a(2),r=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"data-model"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data-model"}},[t._v("#")]),t._v(" Data model")]),t._v(" "),e("p",[t._v("This chapter is about the data model used in AsTeRICS Grid.")]),t._v(" "),e("ol",[e("li",[e("RouterLink",{attrs:{to:"/develop/asterics-grid/05_datamodel.html#introduction"}},[t._v("Introduction")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/develop/asterics-grid/05_datamodel.html#data-models-saved-to-database"}},[t._v("Data models saved to database")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/develop/asterics-grid/05_datamodel.html#data-models-not-saved-to-database"}},[t._v("Data models not saved to database")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/develop/asterics-grid/05_datamodel.html#common-data-model-properties"}},[t._v("Common data model properties")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/develop/asterics-grid/05_datamodel.html#full-and-short-objects"}},[t._v("Full and short objects")])],1)]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/develop/asterics-grid/"}},[t._v("Back to Overview")])],1),t._v(" "),e("h2",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("p",[t._v("Since Javascript is not a typed language it’s not possible by default to define a data model in order to perform checks on valid properties and their types. For this reason the library "),e("a",{attrs:{href:"https://objectmodel.js.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ObjectModel"),e("OutboundLink")],1),t._v(" is used which allows to define data models and perform dynamic checks on their validity.")]),t._v(" "),e("h2",{attrs:{id:"data-models-saved-to-database"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data-models-saved-to-database"}},[t._v("#")]),t._v(" Data models saved to database")]),t._v(" "),e("p",[t._v("Data models defined for AsTeRICS Grid can be found in the folder "),e("a",{attrs:{href:"https://github.com/asterics/AsTeRICS-Grid/tree/master/src/js/model",target:"_blank",rel:"noopener noreferrer"}},[t._v("src/js/model"),e("OutboundLink")],1),t._v(". These are the used data models which are actually saved to database:")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("GridData")]),t._v(": model for a grid, containing a list of GridElement objects")]),t._v(" "),e("li",[e("strong",[t._v("MetaData")]),t._v(": model for global data, including InputConfig and e.g. the ID of the last opened grid to show at startup")]),t._v(" "),e("li",[e("strong",[t._v("Dictionary")]),t._v(": saves the configuration of a "),e("a",{attrs:{href:"https://www.npmjs.com/package/predictionary",target:"_blank",rel:"noopener noreferrer"}},[t._v("predictionary"),e("OutboundLink")],1),t._v(" wordlist, a dictionary shown in the "),e("RouterLink",{attrs:{to:"/develop/documentation_user/02_navigation.html#manage-dictionaries-view"}},[t._v("manage dictionaries view")])],1),t._v(" "),e("li",[e("strong",[t._v("GridImage")]),t._v(": saves the data of an imported image in higher resolution. This is used if a grid element is resized in order to save a new image with fitting size to it’s GridElement object.")]),t._v(" "),e("li",[e("strong",[t._v("EncryptedObject")]),t._v(": contains any of the data model objects above serialized as JSON object and encrypted using the "),e("a",{attrs:{href:"https://github.com/bitwiseshiftleft/sjcl",target:"_blank",rel:"noopener noreferrer"}},[t._v("sjcl"),e("OutboundLink")],1),t._v(" crypto library. In fact every object saved to database is an EncryptedObject containing one of the data model objects listed above.")])]),t._v(" "),e("h2",{attrs:{id:"data-models-not-saved-to-database"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data-models-not-saved-to-database"}},[t._v("#")]),t._v(" Data models not saved to database")]),t._v(" "),e("p",[t._v("These are the used data models which part of one of the data models above, but aren’t independently saved to database:")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("GridElement")]),t._v(": data model for a single grid element, containing label, image and corresponding GridAction objects")]),t._v(" "),e("li",[e("strong",[t._v("AdditionalGridFile")]),t._v(": generic file that is saved within GridData, e.g. an "),e("RouterLink",{attrs:{to:"/develop/documentation_user/01_terms.html#asterics-model"}},[t._v("AsTeRICS ARE model")])],1),t._v(" "),e("li",[e("strong",[t._v("GridActionARE")]),t._v(": data model for an "),e("RouterLink",{attrs:{to:"/develop/documentation_user/05_actions.html#asterics-action"}},[t._v("asterics action")])],1),t._v(" "),e("li",[e("strong",[t._v("GridActionCollectElement")]),t._v(": data model for a "),e("RouterLink",{attrs:{to:"/develop/documentation_user/05_actions.html#collect-element-action"}},[t._v("collect element action")])],1),t._v(" "),e("li",[e("strong",[t._v("GridActionNavigate")]),t._v(": data model for a "),e("RouterLink",{attrs:{to:"/develop/documentation_user/05_actions.html#navigate-to-other-grid"}},[t._v("navigate to other grid action")])],1),t._v(" "),e("li",[e("strong",[t._v("GridActionPredict")]),t._v(": data model for a "),e("RouterLink",{attrs:{to:"/develop/documentation_user/05_actions.html#fill-prediction-elements"}},[t._v("fill prediction elements action")])],1),t._v(" "),e("li",[e("strong",[t._v("GridActionSpeak")]),t._v(": data model for a "),e("RouterLink",{attrs:{to:"/develop/documentation_user/05_actions.html#speak-label"}},[t._v("speak label action")])],1),t._v(" "),e("li",[e("strong",[t._v("GridActionSpeakCustom")]),t._v(": data model for a "),e("RouterLink",{attrs:{to:"/develop/documentation_user/05_actions.html#speak-custom-text"}},[t._v("custom speak action")])],1),t._v(" "),e("li",[e("strong",[t._v("InputConfig")]),t._v(": part of MetaData, containing all input config options (e.g. scanning, hovering)")])]),t._v(" "),e("h2",{attrs:{id:"common-data-model-properties"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#common-data-model-properties"}},[t._v("#")]),t._v(" Common data model properties")]),t._v(" "),e("p",[t._v("All data models have these properties in common:")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("id")]),t._v(" [String]: unique ID of the object")]),t._v(" "),e("li",[e("strong",[t._v("modelName")]),t._v(" [String]: name of the data model, same as the class filename defining it, e.g. GridData")]),t._v(" "),e("li",[e("strong",[t._v("modelVersion")]),t._v(" [String]: version of the data model using semantic versioning, e.g. "),e("code",[t._v("1.0.0")])])]),t._v(" "),e("h2",{attrs:{id:"full-and-short-objects"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#full-and-short-objects"}},[t._v("#")]),t._v(" Full and short objects")]),t._v(" "),e("p",[t._v("EncryptedObject has the following two additional properties:")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("encryptedDataBase64")]),t._v(": contains the encrypted version of the serialized JSON object this EncryptedObject actually holds")]),t._v(" "),e("li",[e("strong",[t._v("encryptedDataBase64Short")]),t._v(": contains the same encrypted serialized JSON object, but all properties longer than 500 characters are removed. This “short” version of the object can be used if not all data is needed, e.g. no image data of grids, but only short data items like the label. The property "),e("code",[t._v("encryptedDataBase64Short")]),t._v(" is empty ("),e("code",[t._v("null")]),t._v("), if it’s the same as "),e("code",[t._v("encryptedDataBase64")]),t._v(" (no long properties) in order to save memory space.")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("GridData")]),t._v(" data model contains a property "),e("code",[t._v("isShortVersion")]),t._v(" which indicates that the current object includes only a short, stripped version of the data, if set to "),e("code",[t._v("true")]),t._v(". These short versions of GridData objects are used for the list of grids in the "),e("RouterLink",{attrs:{to:"/develop/documentation_user/02_navigation.html#manage-grids-view"}},[t._v("manage grids view")]),t._v(" since there the only properties that are needed are "),e("code",[t._v("label")]),t._v(" and "),e("code",[t._v("id")]),t._v(".")],1),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/develop/asterics-grid/04_vuejs.html"}},[t._v("← Previous Chapter")]),t._v(" "),e("RouterLink",{attrs:{to:"/develop/asterics-grid/06_data_storage.html"}},[t._v("Next Chapter →")])],1),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/develop/asterics-grid/"}},[t._v("Back to Overview")])],1)])}),[],!1,null,null,null);e.default=r.exports}}]);