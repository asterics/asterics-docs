(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{1079:function(t,e,o){"use strict";o.r(e);var a=o(21),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"dot-meter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dot-meter"}},[t._v("#")]),t._v(" Dot Meter")]),t._v(" "),a("h3",{attrs:{id:"component-type-actuator-subcategory-graphical-user-interface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#component-type-actuator-subcategory-graphical-user-interface"}},[t._v("#")]),t._v(" Component Type: Actuator (Subcategory: Graphical User Interface)")]),t._v(" "),a("p",[t._v("The Dot Meter generates a graphical representation of a 2-dimensional signal (for example x/y-coordinates) using a colored dot.")]),t._v(" "),a("p",[a("img",{attrs:{src:o(2533),alt:"Screenshot: DotMeter plugin",title:"Screenshot: DotMeter plugin"}}),a("br"),t._v("\nDotMeter plugin")]),t._v(" "),a("p",[a("img",{attrs:{src:o(2534),alt:"Screenshot: DotMeter example",title:"Screenshot: DotMeter example"}}),a("br"),t._v("\nDotMeter example")]),t._v(" "),a("h2",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[t._v("#")]),t._v(" Requirements")]),t._v(" "),a("p",[t._v("Computer Monitor or LC-Display available for graphics output.")]),t._v(" "),a("h2",{attrs:{id:"input-port-description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#input-port-description"}},[t._v("#")]),t._v(" Input Port Description")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("x [double]:")]),t._v(" The x-input port for the signal to be displayed. "),a("strong",[t._v("This input port supports synchronization")])]),t._v(" "),a("li",[a("strong",[t._v("y [double]:")]),t._v(" The y-input port for the signal to be displayed. "),a("strong",[t._v("This input port supports synchronization")])])]),t._v(" "),a("h2",{attrs:{id:"event-listener-description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-listener-description"}},[t._v("#")]),t._v(" Event Listener Description:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("dotOn:")]),t._v(" fill the dot with color.")]),t._v(" "),a("li",[a("strong",[t._v("dotOff:")]),t._v(" show only outline of the dot (can be used to create a led indicator).")])]),t._v(" "),a("h2",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("xMin [double]:")]),t._v(" The default x-minimum of the signal range at model start (this value is automatically updated as lower values come in).")]),t._v(" "),a("li",[a("strong",[t._v("xMax [double]:")]),t._v(" The default x-maximum of the signal range at model start (this value is automatically updated as higher values come in).")]),t._v(" "),a("li",[a("strong",[t._v("yMin [double]:")]),t._v(" The default y-minimum of the signal range at model start (this value is automatically updated as lower values come in).")]),t._v(" "),a("li",[a("strong",[t._v("yMax [double]:")]),t._v(" The default y-maximum of the signal range at model start (this value is automatically updated as higher values come in).")]),t._v(" "),a("li",[a("strong",[t._v("mode [integer]:")]),t._v(' Via this property the way how values which exceed the current min/max range of the bar graph component are handled: "clip to min and max" crops incoming values to the min/max range, "autoupdate min and max" scales the bar graph window and updates the min/max values to cover the incoming value.')]),t._v(" "),a("li",[a("strong",[t._v("dotSize [integer]:")]),t._v(" The radius of the dot.")]),t._v(" "),a("li",[a("strong",[t._v("centerLine [boolean]:")]),t._v(" defines if a line to the window center is shown or not.")]),t._v(" "),a("li",[a("strong",[t._v("displayDot [boolean]:")]),t._v(" defines if the dot is filled or not.")]),t._v(" "),a("li",[a("strong",[t._v("displayCaptions [boolean]:")]),t._v(" defines if the value / captions are shown or not.")]),t._v(" "),a("li",[a("strong",[t._v("gridColor [integer]:")]),t._v(" The colour of the graph grid and descriptions.")]),t._v(" "),a("li",[a("strong",[t._v("dotColor [integer]:")]),t._v(" The colour of the dot.")]),t._v(" "),a("li",[a("strong",[t._v("backgroundColour [integer]:")]),t._v(" The colour of the window background.")]),t._v(" "),a("li",[a("strong",[t._v("fontSize [integer]:")]),t._v(" The font size of the display's caption.")]),t._v(" "),a("li",[a("strong",[t._v("caption [string]:")]),t._v(" The text of the display's caption.")]),t._v(" "),a("li",[a("strong",[t._v("displayGUI [boolean]:")]),t._v(" if selected, the GUI of this component will be displayed - if not, the GUI will be hidden and disabled.")])])])}),[],!1,null,null,null);e.default=r.exports},2533:function(t,e,o){t.exports=o.p+"assets/img/DotMeter.f1cc0200.jpg"},2534:function(t,e,o){t.exports=o.p+"assets/img/DotMeter_example.6039baa6.jpg"}}]);